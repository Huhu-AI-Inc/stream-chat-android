@file:Suppress("RedundantVisibilityModifier")

package io.getstream.chat.android.config

public object Versions {
    internal const val ANDROID_GRADLE_PLUGIN = "8.1.3"
    internal const val ANDROID_JUNIT5_GRADLE_PLUGIN = "1.9.3.0"
    internal const val ANDROID_LEGACY_SUPPORT = "1.0.0"
    internal const val ANDROIDX_ACTIVITY_COMPOSE = "1.7.2"
    internal const val ANDROIDX_ACTIVITY_KTX = "1.7.2"
    internal const val ANDROIDX_ANNOTATIONS = "1.6.0"
    internal const val ANDROIDX_APPCOMPAT = "1.6.1"
    internal const val ANDROIDX_COMPOSE = "1.5.4"
    public const val ANDROIDX_COMPOSE_COMPILER: String = "1.5.4"
    internal const val ANDROIDX_CORE_TEST = "2.2.0"
    internal const val ANDROIDX_FRAGMENT = "1.6.1"
    internal const val ANDROIDX_KTX = "1.10.1"
    internal const val ANDROIDX_LIFECYCLE = "2.6.1"
    internal const val ANDROIDX_NAVIGATION = "2.5.3"
    internal const val ANDROIDX_PREFERENCES = "1.2.1"
    internal const val ANDROIDX_RECYCLERVIEW = "1.3.1"
    internal const val ANDROIDX_STARTUP = "1.1.1"
    internal const val ANDROIDX_TEST_CORE = "1.5.0"
    internal const val ANDROIDX_TEST_JUNIT = "1.1.5"
    internal const val ANDROIDX_VIEW_PAGER_2 = "1.0.0"
    internal const val ANDROIDX_UI_AUTOMATOR = "2.2.0"
    internal const val ANDROIDX_TEST = "1.5.2"
    internal const val BASE_PROFILE = "1.3.1"
    internal const val COIL = "2.4.0"
    internal const val COMPOSE_ACCOMPANIST = "0.32.0"
    internal const val COMPOSE_STABLE_MARKER = "1.0.2"
    internal const val CONSTRAINT_LAYOUT = "2.1.4"
    internal const val COROUTINES = "1.7.3"
    internal const val DETEKT_PLUGIN = "1.23.1"
    internal const val DOKKA = "1.9.0"
    internal const val DOKKASAURUS = "0.1.10"
    internal const val ESPRESSO = "3.5.1"
    internal const val FIREBASE_ANALYTICS = "21.3.0"
    internal const val FIREBASE_CRASHLYTICS = "18.4.0"
    internal const val FIREBASE_CRASHLYTICS_PLUGIN = "2.9.7"
    internal const val FIREBASE_MESSAGING = "23.3.1"
    internal const val FLIPPER = "0.174.0"
    internal const val FLIPPER_SO_LOADER = "0.10.4"
    internal const val GITVERSIONER = "0.5.0"
    internal const val GOOGLE_SERVICES = "4.3.14"
    internal const val GRADLE_NEXUS_PUBLISH_PLUGIN = "1.3.0"
    internal const val GRADLE_VERSIONS_PLUGIN = "0.47.0"
    internal const val HUAWEI_PUSH = "6.11.0.300"
    internal const val JSON = "20230227"
    internal const val JUNIT4 = "4.13.2"
    internal const val JUNIT5 = "5.10.0"
    internal const val KEYBOARD_VISIBILITY_EVENT = "2.3.0"
    internal const val KLUENT = "1.73"
    internal const val KOTLIN = "1.9.20"
    internal const val KOTLIN_BINARY_VALIDATOR = "0.13.2"
    internal const val KSP = "1.9.20-1.0.13"
    internal const val LEAK_CANARY = "2.4"
    internal const val MATERIAL_COMPONENTS = "1.8.0"
    internal const val MACRO_BENCHMARK = "1.2.0"
    internal const val MARKWON = "4.6.2"
    internal const val MOCKITO_KOTLIN = "5.0.0"
    internal const val MOCKITO = "5.4.0"
    internal const val MOSHI = "1.15.0"
    internal const val OK2CURL = "0.8.0"
    internal const val OKHTTP = "4.11.0"
    internal const val PERMISSIONX = "1.7.1"
    internal const val PHOTOVIEW = "2.3.0"
    internal const val RETROFIT = "2.9.0"
    internal const val ROBOLECTRIC = "4.10.3"
    internal const val ROOM = "2.5.2"
    internal const val SHIMMER = "0.5.0"
    internal const val SHOT = "5.14.1"
    internal const val SPOTLESS = "6.20.0"
    internal const val STFALCON_IMAGE_VIEWER = "1.0.1"
    internal const val STREAM_LOG = "1.1.4"
    internal const val STREAM_PUSH = "1.1.6"
    internal const val STREAM_RESULT = "1.1.0"
    internal const val TEST_PARAMETER_INJECTOR = "1.12"
    internal const val THREETENBP = "1.6.8"
    internal const val TIMBER = "5.0.1"
    internal const val TURBINE = "1.0.0"
    internal const val WORK = "2.8.1"
}

public object Dependencies {
    public const val androidGradlePlugin: String = "com.android.tools.build:gradle:${Versions.ANDROID_GRADLE_PLUGIN}"
    public const val androidJunit5GradlePlugin: String = "de.mannodermaus.gradle.plugins:android-junit5:${Versions.ANDROID_JUNIT5_GRADLE_PLUGIN}"
    public const val androidLegacySupport: String = "androidx.legacy:legacy-support-v4:${Versions.ANDROID_LEGACY_SUPPORT}"
    public const val androidxActivityKtx: String = "androidx.activity:activity-ktx:${Versions.ANDROIDX_ACTIVITY_KTX}"
    public const val androidxAnnotations: String = "androidx.annotation:annotation:${Versions.ANDROIDX_ANNOTATIONS}"
    public const val androidxAppCompat: String = "androidx.appcompat:appcompat:${Versions.ANDROIDX_APPCOMPAT}"
    public const val androidxArchCoreTest: String = "androidx.arch.core:core-testing:${Versions.ANDROIDX_CORE_TEST}"
    public const val androidxCoreKtx: String = "androidx.core:core-ktx:${Versions.ANDROIDX_KTX}"
    public const val androidxFragmentKtx: String = "androidx.fragment:fragment-ktx:${Versions.ANDROIDX_FRAGMENT}"
    public const val androidxLifecycleProcess: String = "androidx.lifecycle:lifecycle-process:${Versions.ANDROIDX_LIFECYCLE}"
    public const val androidxLifecycleLiveDataKtx: String = "androidx.lifecycle:lifecycle-livedata-ktx:${Versions.ANDROIDX_LIFECYCLE}"
    public const val androidxLifecycleViewModelKtx: String = "androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.ANDROIDX_LIFECYCLE}"
    public const val androidxPreferences: String = "androidx.preference:preference:${Versions.ANDROIDX_PREFERENCES}"
    public const val androidxRecyclerview: String = "androidx.recyclerview:recyclerview:${Versions.ANDROIDX_RECYCLERVIEW}"
    public const val androidxStartup: String = "androidx.startup:startup-runtime:${Versions.ANDROIDX_STARTUP}"
    public const val androidxTest: String = "androidx.test:core:${Versions.ANDROIDX_TEST_CORE}"
    public const val androidxTestRunner: String = "androidx.test:runner:${Versions.ANDROIDX_TEST}"
    public const val androidxUiAutomator: String = "androidx.test.uiautomator:uiautomator:${Versions.ANDROIDX_UI_AUTOMATOR}"
    public const val androidxTestKtx: String = "androidx.test:core-ktx:${Versions.ANDROIDX_TEST_CORE}"
    public const val androidxLifecycleTesting: String = "androidx.lifecycle:lifecycle-runtime-testing:${Versions.ANDROIDX_LIFECYCLE}"
    public const val androidxTestJunit: String = "androidx.test.ext:junit:${Versions.ANDROIDX_TEST_JUNIT}"
    public const val androidxTestJunitKtx: String = "androidx.test.ext:junit-ktx:${Versions.ANDROIDX_TEST_JUNIT}"
    public const val androidxViewPager2: String = "androidx.viewpager2:viewpager2:${Versions.ANDROIDX_VIEW_PAGER_2}"
    public const val baseProfile: String = "androidx.profileinstaller:profileinstaller:${Versions.BASE_PROFILE}"
    public const val baselineProfilePlugin: String = "androidx.benchmark:benchmark-baseline-profile-gradle-plugin:${Versions.MACRO_BENCHMARK}"
    public const val coil: String = "io.coil-kt:coil:${Versions.COIL}"
    public const val coilGif: String = "io.coil-kt:coil-gif:${Versions.COIL}"
    public const val coilVideo: String = "io.coil-kt:coil-video:${Versions.COIL}"
    public const val composeCoil: String = "io.coil-kt:coil-compose:${Versions.COIL}"
    public const val composeCompiler: String = "androidx.compose.compiler:compiler:${Versions.ANDROIDX_COMPOSE_COMPILER}"
    public const val composeRuntime: String = "androidx.compose.runtime:runtime:${Versions.ANDROIDX_COMPOSE}"
    public const val composeUi: String = "androidx.compose.ui:ui:${Versions.ANDROIDX_COMPOSE}"
    public const val composeUiTest: String = "androidx.compose.ui:ui-test-junit4:${Versions.ANDROIDX_COMPOSE}"
    public const val composeUiTestManifest: String = "androidx.compose.ui:ui-test-manifest:${Versions.ANDROIDX_COMPOSE}"
    public const val composeUiTooling: String = "androidx.compose.ui:ui-tooling:${Versions.ANDROIDX_COMPOSE}"
    public const val composeFoundation: String = "androidx.compose.foundation:foundation:${Versions.ANDROIDX_COMPOSE}"
    public const val composeMaterial: String = "androidx.compose.material:material:${Versions.ANDROIDX_COMPOSE}"
    public const val composeAccompanistPermissions: String = "com.google.accompanist:accompanist-permissions:${Versions.COMPOSE_ACCOMPANIST}"
    public const val composeAccompanistPager: String = "com.google.accompanist:accompanist-pager:${Versions.COMPOSE_ACCOMPANIST}"
    public const val composeAccompanistSystemUiController: String = "com.google.accompanist:accompanist-systemuicontroller:${Versions.COMPOSE_ACCOMPANIST}"
    public const val composeActivity: String = "androidx.activity:activity-compose:${Versions.ANDROIDX_ACTIVITY_COMPOSE}"
    public const val composeViewModel: String = "androidx.lifecycle:lifecycle-viewmodel-compose:${Versions.ANDROIDX_LIFECYCLE}"
    public const val composeStableMarker: String = "com.github.skydoves:compose-stable-marker:${Versions.COMPOSE_STABLE_MARKER}"
    public const val coroutinesAndroid: String = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.COROUTINES}"
    public const val coroutinesCore: String = "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.COROUTINES}"
    public const val coroutinesTest: String = "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Versions.COROUTINES}"
    public const val constraintLayout: String = "androidx.constraintlayout:constraintlayout:${Versions.CONSTRAINT_LAYOUT}"
    public const val detektPlugin: String = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:${Versions.DETEKT_PLUGIN}"
    public const val detektFormatting: String = "io.gitlab.arturbosch.detekt:detekt-formatting:${Versions.DETEKT_PLUGIN}"
    public const val dokka: String = "org.jetbrains.dokka:dokka-gradle-plugin:${Versions.DOKKA}"
    public const val dokkasaurus: String = "io.getstream:dokkasaurus:${Versions.DOKKASAURUS}"
    public const val espressoCore: String = "androidx.test.espresso:espresso-core:${Versions.ESPRESSO}"
    public const val espressoContrib: String = "androidx.test.espresso:espresso-contrib:${Versions.ESPRESSO}"
    public const val espressoIdlingResources: String = "androidx.test.espresso:espresso-idling-resource:${Versions.ESPRESSO}"
    public const val fragmentTest: String = "androidx.fragment:fragment-testing:${Versions.ANDROIDX_FRAGMENT}"
    public const val firebaseAnalytics: String = "com.google.firebase:firebase-analytics-ktx:${Versions.FIREBASE_ANALYTICS}"
    public const val firebaseCrashlytics: String = "com.google.firebase:firebase-crashlytics:${Versions.FIREBASE_CRASHLYTICS}"
    public const val firebaseCrashlyticsPlugin: String = "com.google.firebase:firebase-crashlytics-gradle:${Versions.FIREBASE_CRASHLYTICS_PLUGIN}"
    public const val firebaseMessaging: String = "com.google.firebase:firebase-messaging:${Versions.FIREBASE_MESSAGING}"
    public const val flipper: String = "com.facebook.flipper:flipper:${Versions.FLIPPER}"
    public const val flipperNetwork: String = "com.facebook.flipper:flipper-network-plugin:${Versions.FLIPPER}"
    public const val flipperLoader: String = "com.facebook.soloader:soloader:${Versions.FLIPPER_SO_LOADER}"
    public const val gitversionerPlugin: String = "com.pascalwelsch.gitversioner:gitversioner:${Versions.GITVERSIONER}"
    public const val googleServicesPlugin: String = "com.google.gms:google-services:${Versions.GOOGLE_SERVICES}"
    public const val gradleNexusPublishPlugin: String = "io.github.gradle-nexus:publish-plugin:${Versions.GRADLE_NEXUS_PUBLISH_PLUGIN}"
    public const val gradleVersionsPlugin: String = "com.github.ben-manes:gradle-versions-plugin:${Versions.GRADLE_VERSIONS_PLUGIN}"
    public const val huaweiPush: String = "com.huawei.hms:push:${Versions.HUAWEI_PUSH}"
    public const val json: String = "org.json:json:${Versions.JSON}"
    public const val junit4: String = "junit:junit:${Versions.JUNIT4}"
    public const val junitJupiterApi: String = "org.junit.jupiter:junit-jupiter-api:${Versions.JUNIT5}"
    public const val junitJupiterParams: String = "org.junit.jupiter:junit-jupiter-params:${Versions.JUNIT5}"
    public const val junitJupiterEngine: String = "org.junit.jupiter:junit-jupiter-engine:${Versions.JUNIT5}"
    public const val junitVintageEngine: String = "org.junit.vintage:junit-vintage-engine:${Versions.JUNIT5}"
    public const val keyboardVisibilityEvent: String = "net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:${Versions.KEYBOARD_VISIBILITY_EVENT}"
    public const val kluent: String = "org.amshove.kluent:kluent:${Versions.KLUENT}"
    public const val kotlinBinaryValidator: String = "org.jetbrains.kotlinx:binary-compatibility-validator:${Versions.KOTLIN_BINARY_VALIDATOR}"
    public const val kotlinGradlePlugin: String = "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.KOTLIN}"
    public const val kotlinReflect: String = "org.jetbrains.kotlin:kotlin-reflect:${Versions.KOTLIN}"
    public const val ksp: String = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin:${Versions.KSP}"
    public const val leakCanary: String = "com.squareup.leakcanary:leakcanary-android:${Versions.LEAK_CANARY}"
    public const val macroBenchmark: String = "androidx.benchmark:benchmark-macro-junit4:${Versions.MACRO_BENCHMARK}"
    public const val materialComponents: String = "com.google.android.material:material:${Versions.MATERIAL_COMPONENTS}"
    public const val markwonCore: String = "io.noties.markwon:core:${Versions.MARKWON}"
    public const val markwonLinkify: String = "io.noties.markwon:linkify:${Versions.MARKWON}"
    public const val markwonextStrikethrough: String = "io.noties.markwon:ext-strikethrough:${Versions.MARKWON}"
    public const val markwonImage: String = "io.noties.markwon:image:${Versions.MARKWON}"
    public const val mockito: String = "org.mockito:mockito-core:${Versions.MOCKITO}"
    public const val mockitoKotlin: String = "org.mockito.kotlin:mockito-kotlin:${Versions.MOCKITO_KOTLIN}"
    public const val moshi: String = "com.squareup.moshi:moshi:${Versions.MOSHI}"
    public const val moshiCodegen: String = "com.squareup.moshi:moshi-kotlin-codegen:${Versions.MOSHI}"
    public const val moshiKotlin: String = "com.squareup.moshi:moshi-kotlin:${Versions.MOSHI}"
    public const val moshiAdapters: String = "com.squareup.moshi:moshi-adapters:${Versions.MOSHI}"
    public const val navigationFragmentKTX: String = "androidx.navigation:navigation-fragment-ktx:${Versions.ANDROIDX_NAVIGATION}"
    public const val navigationSafeArgsGradlePlugin: String = "androidx.navigation:navigation-safe-args-gradle-plugin:${Versions.ANDROIDX_NAVIGATION}"
    public const val navigationRuntimeKTX: String = "androidx.navigation:navigation-runtime-ktx:${Versions.ANDROIDX_NAVIGATION}"
    public const val navigationTest: String = "androidx.navigation:navigation-testing:${Versions.ANDROIDX_NAVIGATION}"
    public const val navigationUIKTX: String = "androidx.navigation:navigation-ui-ktx:${Versions.ANDROIDX_NAVIGATION}"
    public const val ok2curl: String = "com.github.mrmike:ok2curl:${Versions.OK2CURL}"
    public const val okhttp: String = "com.squareup.okhttp3:okhttp:${Versions.OKHTTP}"
    public const val okhttpLoggingInterceptor: String = "com.squareup.okhttp3:logging-interceptor:${Versions.OKHTTP}"
    public const val okhttpMockWebserver: String = "com.squareup.okhttp3:mockwebserver:${Versions.OKHTTP}"
    public const val permissionx: String = "com.guolindev.permissionx:permissionx:${Versions.PERMISSIONX}"
    public const val photoview: String = "com.github.chrisbanes:PhotoView:${Versions.PHOTOVIEW}"
    public const val retrofit: String = "com.squareup.retrofit2:retrofit:${Versions.RETROFIT}"
    public const val retrofitMoshiConverter: String = "com.squareup.retrofit2:converter-moshi:${Versions.RETROFIT}"
    public const val robolectric: String = "org.robolectric:robolectric:${Versions.ROBOLECTRIC}"
    public const val roomCompiler: String = "androidx.room:room-compiler:${Versions.ROOM}"
    public const val roomKtx: String = "androidx.room:room-ktx:${Versions.ROOM}"
    public const val roomRuntime: String = "androidx.room:room-runtime:${Versions.ROOM}"
    public const val roomTesting: String = "androidx.room:room-testing:${Versions.ROOM}"
    public const val shimmer: String = "com.facebook.shimmer:shimmer:${Versions.SHIMMER}"
    public const val shot: String = "com.karumi:shot:${Versions.SHOT}"
    public const val spotlessGradlePlugin: String = "com.diffplug.spotless:spotless-plugin-gradle:${Versions.SPOTLESS}"
    public const val stfalconImageViewer: String = "com.github.stfalcon-studio:StfalconImageViewer:${Versions.STFALCON_IMAGE_VIEWER}"
    public const val streamLog: String = "io.getstream:stream-log:${Versions.STREAM_LOG}"
    public const val streamLogAndroid: String = "io.getstream:stream-log-android:${Versions.STREAM_LOG}"
    public const val streamLogAndroidFile: String = "io.getstream:stream-log-android-file:${Versions.STREAM_LOG}"
    public const val streamPush: String = "io.getstream:stream-android-push:${Versions.STREAM_PUSH}"
    public const val streamPushPermissions: String = "io.getstream:stream-android-push-permissions:${Versions.STREAM_PUSH}"
    public const val streamPushPermissionsSnackbar: String = "io.getstream:stream-android-push-permissions-snackbar:${Versions.STREAM_PUSH}"
    public const val streamPushDelegate: String = "io.getstream:stream-android-push-delegate:${Versions.STREAM_PUSH}"
    public const val streamPushFirebase: String = "io.getstream:stream-android-push-firebase:${Versions.STREAM_PUSH}"
    public const val streamPushHuawei: String = "io.getstream:stream-android-push-huawei:${Versions.STREAM_PUSH}"
    public const val streamPushXiaomi: String = "io.getstream:stream-android-push-xiaomi:${Versions.STREAM_PUSH}"
    public const val streamResult: String = "io.getstream:stream-result:${Versions.STREAM_RESULT}"
    public const val streamResultCall: String = "io.getstream:stream-result-call:${Versions.STREAM_RESULT}"
    public const val testParameterInjector: String = "com.google.testparameterinjector:test-parameter-injector:${Versions.TEST_PARAMETER_INJECTOR}"
    public const val threeTenBp: String = "org.threeten:threetenbp:${Versions.THREETENBP}"
    public const val timber: String = "com.jakewharton.timber:timber:${Versions.TIMBER}"
    public const val turbine: String = "app.cash.turbine:turbine:${Versions.TURBINE}"
    public const val workRuntimeKtx: String = "androidx.work:work-runtime-ktx:${Versions.WORK}"
    public const val workTesting: String = "androidx.work:work-testing:${Versions.WORK}"

    @JvmStatic
    public fun isNonStable(version: String): Boolean = isStable(version).not()

    @JvmStatic
    public fun isStable(version: String): Boolean = ("^[0-9.-]+$").toRegex().matches(version)
}
